// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Loops.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Contact : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The firstName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstName { get; set; }
#nullable restore
#else
        public string FirstName { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The lastName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastName { get; set; }
#nullable restore
#else
        public string LastName { get; set; }
#endif
        /// <summary>An object of mailing list IDs and boolean subscription statuses.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Loops.OpenApiClient.Models.Contact_mailingLists? MailingLists { get; set; }
#nullable restore
#else
        public global::Soenneker.Loops.OpenApiClient.Models.Contact_mailingLists MailingLists { get; set; }
#endif
        /// <summary>Double opt-in status.</summary>
        public global::Soenneker.Loops.OpenApiClient.Models.Contact_optInStatus? OptInStatus { get; set; }
        /// <summary>The source property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Source { get; set; }
#nullable restore
#else
        public string Source { get; set; }
#endif
        /// <summary>The subscribed property</summary>
        public bool? Subscribed { get; set; }
        /// <summary>The userGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserGroup { get; set; }
#nullable restore
#else
        public string UserGroup { get; set; }
#endif
        /// <summary>The userId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserId { get; set; }
#nullable restore
#else
        public string UserId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Loops.OpenApiClient.Models.Contact"/> and sets the default values.
        /// </summary>
        public Contact()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Loops.OpenApiClient.Models.Contact"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Loops.OpenApiClient.Models.Contact CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Loops.OpenApiClient.Models.Contact();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "email", n => { Email = n.GetStringValue(); } },
                { "firstName", n => { FirstName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "lastName", n => { LastName = n.GetStringValue(); } },
                { "mailingLists", n => { MailingLists = n.GetObjectValue<global::Soenneker.Loops.OpenApiClient.Models.Contact_mailingLists>(global::Soenneker.Loops.OpenApiClient.Models.Contact_mailingLists.CreateFromDiscriminatorValue); } },
                { "optInStatus", n => { OptInStatus = n.GetEnumValue<global::Soenneker.Loops.OpenApiClient.Models.Contact_optInStatus>(); } },
                { "source", n => { Source = n.GetStringValue(); } },
                { "subscribed", n => { Subscribed = n.GetBoolValue(); } },
                { "userGroup", n => { UserGroup = n.GetStringValue(); } },
                { "userId", n => { UserId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("firstName", FirstName);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("lastName", LastName);
            writer.WriteObjectValue<global::Soenneker.Loops.OpenApiClient.Models.Contact_mailingLists>("mailingLists", MailingLists);
            writer.WriteEnumValue<global::Soenneker.Loops.OpenApiClient.Models.Contact_optInStatus>("optInStatus", OptInStatus);
            writer.WriteStringValue("source", Source);
            writer.WriteBoolValue("subscribed", Subscribed);
            writer.WriteStringValue("userGroup", UserGroup);
            writer.WriteStringValue("userId", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
